"0",""
"0","library(magrittr)"
"0","library(bain)"
"0","library(BFpack)"
"0",""
"0","# create an empty vector of length 500"
"0","BF_bain <- BF_BFpack <- vector(""numeric"", length = 500)"
"0",""
"0","d <- 0.2 # small effect, according to cohen"
"0",""
"0","# n stands for the sample size (2:1000 in steps of 2)"
"0","for(n in 1:length(BF) * 2) {"
"0","  # create two groups of equal size n"
"0","  n1 <- n2 <- n"
"0","  # sample two observations for the first group"
"0","  x1 <- rnorm(n1)"
"0","  # standardize, such that cohen's d is not dependent on sampling variability"
"0","  x1 <- (x1 - mean(x1)) / sd(x1)"
"0","  # sample two observations for the second group"
"0","  x2 <- rnorm(n2)"
"0","  # standardize again, and add cohen's d, to fix the effect size throughout"
"0","  x2 <- (x2 - mean(x2)) / sd(x2) + d"
"0","  # create a data.frame with all observations, and add grouping grouping factor."
"0","  df <- data.frame(X = c(x1, x2),"
"0","                   G = rep(c(""A"", ""B""), "
"0","                           times = c(length(x1), length(x2))))"
"0","  # Calculate Bayes factors using bain"
"0","  BF_bain[n/2] <- lm(X ~ G, df) %>% bain(hypothesis = ""GB=0"") %$% fit$BF.u[1]"
"0","  # Calculate Bayes factors using BFpack"
"0","  BF_BFpack[n/2] <- lm(X ~ G, df) %>% BF(""GB = 0"") %$% BFtable_confirmatory[1,7]"
"0","}"
"0",""
"0","# Plot the results."
"0","{"
"0","  plot(x = 1:length(BF_BFpack) * 2,"
"0","       y = BF_BFpack,"
"0","       type = ""l"","
"0","       lty = 2,"
"0","       ylab = ""BF"")"
"0","  lines(x = 1:length(BF_bain) * 2,"
"0","        y = BF_bain,"
"0","        type = ""l"","
"0","        ""Sample size"")"
"0","  legend(""topright"","
"0","         c(""bain"", ""BFpack""),"
"0","         lty = c(1,2))"
"0","}"
"0",""
