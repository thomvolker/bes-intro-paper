"0","sim2_normal <- "
"0","  expand_grid(nsim = 1:nsim,"
"0","              n = n,"
"0","              pcor = pcor,"
"0","              r2 = r2,"
"0","              model = ""normal"") %>%"
"0","  mutate(rho   = map(pcor, ~cormat(.x, length(ratio_beta))),"
"0","         betas = pmap(list(r2, rho, model),                   # calculate regression"
"0","                      function(r2, rho, model) {              # coefficients given"
"0","                        coefs(r2, ratio_beta, rho, model)     # model specifications"
"0","                      }),"
"0","         fit = future_pmap(list(r2, betas, rho, n, model), "
"0","                           function(r2, betas, rho, n, model) {"
"0","                             data_and_model(r2 = r2,"
"0","                                            betas = betas,"
"0","                                            rho = rho,"
"0","                                            n = n, "
"0","                                            model = model,"
"0","                                            formula = Y ~ V1 + V2 + V3 + V4 + V5,"
"0","                                            hypothesis = ""V1 > 0 & V2 > 0 & V3 > 0"")"
"0","         }, .options = options))"
"0",""
"0","sim2_logit <- "
"0","  expand_grid(nsim = 1:nsim,"
"0","              n = n,"
"0","              pcor = pcor,"
"0","              r2 = r2,"
"0","              model = ""logit"") %>%"
"0","  mutate(rho   = map(pcor, ~cormat(.x, length(ratio_beta))),"
"0","         betas = pmap(list(r2, rho, model),                   # calculate regression"
"0","                      function(r2, rho, model) {              # coefficients given"
"0","                        coefs(r2, ratio_beta, rho, model)     # model specifications"
"0","                      }),"
"0","         fit = future_pmap(list(r2, betas, rho, n, model), "
"0","                           function(r2, betas, rho, n, model) {"
"0","                             data_and_model(r2 = r2,"
"0","                                            betas = betas,"
"0","                                            rho = rho,"
"0","                                            n = n, "
"0","                                            model = model,"
"0","                                            mutate_args = quos(Vcomb = (V1 + V2 + V3)/3),"
"0","                                            formula = Y ~ Vcomb + V4 + V5,"
"0","                                            hypothesis = ""Vcomb > 0"")"
"0","         }, .options = options))"
"0",""
"0",""
"0","sim2_probit <- "
"0","  expand_grid(nsim = 1:nsim,"
"0","              n = n,"
"0","              pcor = pcor,"
"0","              r2 = r2,"
"0","              model = ""probit"") %>%"
"0","  mutate(rho   = map(pcor, ~cormat(.x, length(ratio_beta))),"
"0","         betas = pmap(list(r2, rho, model),                   # calculate regression"
"0","                      function(r2, rho, model) {              # coefficients given"
"0","                        coefs(r2, ratio_beta, rho, model)     # model specifications"
"0","                      }),"
"0","         fit = future_pmap(list(r2, betas, rho, n, model), "
"0","                           function(r2, betas, rho, n, model) {"
"0","                             data_and_model(r2 = r2,"
"0","                                            betas = betas,"
"0","                                            rho = rho,"
"0","                                            n = n, "
"0","                                            model = model,"
"0","                                            mutate_args = quos(Dummy = cut((V1 + V2 + V3)/3,"
"0","                                                                           3, labels = 1:3)),"
"0","                                            formula = Y ~ Dummy - 1 + V4 + V5,"
"0","                                            hypothesis = ""Dummy1 < Dummy2 < Dummy3"")"
"0","         }, .options = options))"
"0",""
"0","sim2 <- bind_rows(sim2_normal, sim2_logit, sim2_probit)"
"0",""
"0","saveRDS(sim2, file = ""simulation-results/sim2.rds"")"
